name: BrightBoost CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: "18"
  CYPRESS_BASE_URL: http://localhost:5173

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint code
        run: pnpm lint

      - name: Install Cypress dependencies
        run: sudo apt-get update && sudo apt-get install -y libxss1

      - name: Install Cypress binary
        run: npx cypress install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run tests
        run: pnpm test

      - name: Start development server
        run: pnpm dev &

      - name: Wait for server to be ready
        run: npx wait-on http://localhost:5173 --timeout 60000

      - name: Run Cypress smoke tests
        run: pnpm cypress run --spec "cypress/e2e/smoke.cy.ts"

      - name: Build application
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: dist/

  db-check:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: brightboost_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prisma migrations
        run: npx prisma migrate deploy
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/brightboost_test

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/brightboost_test

      - name: Run database connectivity test
        run: pnpm test:db
        env:
          POSTGRES_URL: postgresql://postgres:postgres@localhost:5432/brightboost_test

  build-docker-image:
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set lowercase repository name
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.REPO_LC }}/brightboost-web:latest,ghcr.io/${{ env.REPO_LC }}/brightboost-web:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-to-azure:
    needs: build-docker-image
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: dist/

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set lowercase repository name
        run: |
          echo "REPO_LC=${GITHUB_REPOSITORY,,}" >> $GITHUB_ENV

      - name: Deploy Web App Container
        uses: azure/webapps-deploy@v2
        with:
          app-name: "bb-dev-web"
          images: "ghcr.io/${{ env.REPO_LC }}/brightboost-web:${{ github.sha }}"

      - name: Set WEBSITES_PORT App Setting
        uses: Azure/appservice-settings@v1
        with:
          app-name: "bb-dev-web"
          mask-inputs: false
          app-settings-json: |
            [
              {
                "name": "WEBSITES_PORT",
                "value": "3000",
                "slotSetting": false
              }
            ]
