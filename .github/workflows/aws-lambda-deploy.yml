name: Deploy Lambda Backend to AWS

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  AWS_REGION: us-east-1
  STACK_NAME: brightboost-teacher-signup

jobs:
  deploy:
    name: Deploy Lambda backend to AWS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: pnpm test

      - name: Run linting
        run: pnpm lint

      - name: Build Lambda TypeScript
        run: |
          cd src/lambda
          pnpm install
          pnpm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions-TeacherSignup
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      - name: Validate SAM template
        run: sam validate --template template.yaml

      - name: Build SAM application
        run: sam build --template template.yaml

      - name: Deploy to AWS
        run: |
          SANITIZED_BRANCH=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          sam deploy \
            --stack-name ${{ env.STACK_NAME }}-${SANITIZED_BRANCH} \
            --capabilities CAPABILITY_IAM \
            --region ${{ env.AWS_REGION }} \
            --resolve-s3 \
            --parameter-overrides \
              Environment=${{ github.ref_name == 'main' && 'prod' || 'dev' }} \
              DatabaseSecretArn=${{ secrets.DATABASE_SECRET_ARN }} \
              VpcId=${{ secrets.VPC_ID }} \
              SubnetIds="${{ secrets.SUBNET_IDS }}" \
              SecurityGroupId=${{ secrets.SECURITY_GROUP_ID }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset

      - name: Get API endpoint
        id: get-endpoint
        run: |
          SANITIZED_BRANCH=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          ENDPOINT=$(aws cloudformation describe-stacks \
            --stack-name ${{ env.STACK_NAME }}-${SANITIZED_BRANCH} \
            --query 'Stacks[0].Outputs[?OutputKey==`TeacherSignupApiUrl`].OutputValue' \
            --output text)
          echo "endpoint=$ENDPOINT" >> $GITHUB_OUTPUT

      - name: Test API endpoint
        run: |
          curl -X POST ${{ steps.get-endpoint.outputs.endpoint }} \
            -H "Content-Type: application/json" \
            -d '{"name":"Test Teacher","email":"test@example.com","password":"testpassword123"}' \
            --fail-with-body || echo "API test failed - this is expected for first deployment"

      - name: Comment PR with endpoint
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Teacher Signup API Deployed!**
              
              **Endpoint:** ${{ steps.get-endpoint.outputs.endpoint }}
              
              **Test with:**
              \`\`\`bash
              curl -X POST ${{ steps.get-endpoint.outputs.endpoint }} \\
                -H "Content-Type: application/json" \\
                -d '{"name":"Test Teacher","email":"test@example.com","password":"testpassword123"}'
              \`\`\`
              
              **Stack:** ${{ env.STACK_NAME }}-$(echo "${{ github.ref_name }}" | sed 's/\//-/g')`
            })
